{"mappings":"uhBAKgBA,IACdC,EAAAC,YAAY,CAAC,SAAU,OAAQ,YAAa,UAAU,EACxD,CAeA,IAaMC,EAAc,CAClBC,KAAM,CACJC,gBAAiB,GACjBC,kBAAmB,CAAC,YAAa,WAAY,cAC7CC,gBAAiB,CAAC,QAClBC,gBAAiB,CAAC,QAAS,eAAgB,OAAQ,SAAU,eAE/DC,KAAM,CACJJ,gBAAiB,CAAC,YAClBC,kBAAmB,CAAC,YAAa,cACjCC,gBAAiB,CAAC,QAClBC,gBAAiB,CAAC,QAAS,eAAgB,OAAQ,SAAU,eAE/DE,OAAQ,CACNL,gBAAiB,CAAC,aAClBC,kBAAmB,CAAC,WAAY,cAChCC,gBAAiB,CAAC,QAAS,gBAC3BC,gBAAiB,CAAC,OAAQ,OAAQ,SAAU,eAE9CG,OAAQ,CACNN,gBAAiB,CAAC,cAClBC,kBAAmB,CAAC,WAAY,aAChCC,gBAAiB,CAAC,UAClBC,gBAAiB,CAAC,OAAQ,QAAS,eAAgB,OAAQ,eAE7D,cAAe,CACbH,gBAAiB,GACjBC,kBAAmB,CAAC,WAAY,YAAa,cAC7CC,gBAAiB,CAAC,cAClBC,gBAAiB,CAAC,OAAQ,QAAS,eAAgB,OAAQ,Y,SAO/CI,EAASC,GACvBC,OAAOC,QAAUF,EACjB,IAKIG,EAAAb,EAAYU,GAJdR,EAIEW,EAJFX,gBACAC,EAGEU,EAHFV,kBACAC,EAEES,EAFFT,gBACAC,EACEQ,EADFR,gBAEFH,EAAgBY,SAAQ,SAACC,GAzDD,IAASC,IA0DXD,EAzDtBjB,EAAAmB,OAAOD,GAAQE,UAAUC,IAAI,sBAC7BrB,EAAAmB,OAAOD,GAAQI,SAAS,GAAGC,aAAa,eAAgB,OAyDxD,IACAlB,EAAkBW,SAAQ,SAACQ,GApDD,IAASN,IAqDXM,EApDxBxB,EAAAmB,OAAOD,GAAQE,UAAUK,OAAO,sBAChCzB,EAAAmB,OAAOD,GAAQI,SAAS,GAAGI,gBAAgB,eAoD3C,IACA1B,EAAAC,YAAYK,EAAiB,UAAU,GACvCN,EAAAC,YAAYM,EAAiB,UAAU,GACvCR,GACF,C,uCCnFgB4B,EAAOC,G,oBACjB5B,EAAAmB,OAAO,cAAcG,UACtBO,MAAK,SAACC,EAAEC,GAAM,OAAAD,EAAEE,aAAaJ,GAAaG,EAAEC,aAAaJ,GAAa,GAAI,C,IAC1EZ,SAAQ,SAAAiB,GAAQ,OAAAjC,EAAAmB,OAAO,cAAce,YAAYD,E,GACtD,C,SCDgBE,EAAWC,GACzBvB,OAAOwB,aAAgB,WAAgBC,OAANF,GACjC,IAAIG,EAAe,WAAgBD,OAANF,GAC7BpC,EAAAmB,OAAOoB,GAAahB,aAAa,OAAQvB,EAAAwC,SAC3C,C,SAKgBC,IACd,IAAIC,EAAO7B,OAAO8B,SAASD,KAC3B,IAAIA,EAAKE,SAAS,SAIlB,GAAIF,EAAKE,SAAS,SAChBjC,EAAS,aACJ,GAAI+B,EAAKE,SAAS,YAEvB,GADAjC,EAAS,UACL+B,EAAKE,SAAS,KAAM,CACtB,IAAIC,EAAYH,EAAKI,MAAM,KAAKC,UAAU,IAC7BF,EAAUC,MAAM,MAAQD,GAC9B7B,SAAQ,SAACoB,GACd,OAAQA,G,QAEN,MACF,IAAK,eACHD,EAAW,QDNnBR,EAAO,aAEP3B,EAAAmB,OAAO,WAAW6B,YAAc,sBAChChD,EAAAmB,OAAO,WAAWI,aAAa,OAAQ,wBACvCvB,EAAAC,YAAY,CAAC,iBAAkB,kBAAmB,sBAAsB,GACxED,EAAAC,YAAY,CAAC,gBAAiB,sBAAsB,GCG5C,MACF,IAAK,iBACHkC,EAAW,UDvBnBR,EAAO,eAEP3B,EAAAmB,OAAO,WAAW6B,YAAc,sBAChChD,EAAAmB,OAAO,WAAWI,aAAa,OAAQvB,EAAAwC,UACvCxC,EAAAC,YAAY,CAAC,eAAgB,kBAAmB,sBAAsB,GACtED,EAAAC,YAAY,CAAC,kBAAmB,sBAAsB,GCoB9C,MACF,IAAK,iBACHkC,EAAW,UDDnBR,EAAO,eAEP3B,EAAAmB,OAAO,WAAW6B,YAAc,cAChChD,EAAAmB,OAAO,WAAWI,aAAa,OAAQ,0BACvCvB,EAAAC,YAAY,CAAC,iBAAkB,gBAAiB,sBAAsB,GACtED,EAAAC,YAAY,CAAC,kBAAmB,sBAAsB,GCAlD,GACF,OACSyC,EAAKE,SAAS,WACvBjC,EAAS,UACA+B,EAAKE,SAAS,gBACvBjC,EAAS,eAETA,EAAS,OAEb,C,iBCjDAE,OAAOoC,aAAe,WACpBR,GACF,EAKA5B,OAAOqC,OAAS,WACdT,IACAU,EAAAC,gBACF,EAKAvC,OAAOwC,WAAalB,EACpBtB,OAAOyC,eAAiBvD,EACxBc,OAAO0C,W,WHXL,IAAIC,EAAS,SACbxD,EAAAmB,OAAO,UAAUC,UAAUqC,OAAOD,GAClCxD,EAAAmB,OAAO,QAAQC,UAAUqC,OAAOD,GAChCxD,EAAAmB,OAAO,YAAYC,UAAUqC,OAAOD,EACtC,EGSA3C,OAAO6C,MAAQ,CAAEC,OAAQ,EAAGC,IAAK,EAAGC,IAAK,GACzChD,OAAOiD,SAAW,CAAEH,OAAQ,EAAGC,IAAK,EAAGC,IAAK,GAC5ChD,OAAOkD,oBAAiBC,EACxBnD,OAAOoD,UAAY,GACnBpD,OAAOqD,cAAgB,C","sources":["js/utils/sidebar.js","js/utils/header.js","js/utils/setup-page.js","js/ui.js"],"sourcesContent":["import { select, toggleClass } from './generics'\n\n/**\n * Hide the whole menu to show only the burger icon\n */\nexport function deactivateMenu() {\n  toggleClass(['layout', 'menu', 'menuLink'], 'active', false)\n}\n\n/**\n * Switch the menu from burger icon to full display\n */\nexport function toggleMenu() {\n  let active = 'active'\n  select('layout').classList.toggle(active)\n  select('menu').classList.toggle(active)\n  select('menuLink').classList.toggle(active)\n}\n\n/**\n * Show the item in parameter active in the sidebar\n */\nlet activateSidebarItem = function(itemId) {\n  select(itemId).classList.add('pure-menu-selected')\n  select(itemId).children[0].setAttribute('aria-current', 'page')\n}\n\n/**\n * Show the item in parameter inactive in the sidebar\n */\nlet deactivateSidebarItem = function(itemId) {\n  select(itemId).classList.remove('pure-menu-selected')\n  select(itemId).children[0].removeAttribute('aria-current')\n}\n\nconst menusConfig = {\n  home: {\n    itemsToActivate: [],\n    itemsToDeactivate: ['booksLink', 'infoLink', 'seriesLink'],\n    selectorsToShow: ['home'],\n    selectorsToHide: ['books', 'sorting-menu', 'info', 'series', 'whattoread']\n  }, \n  info: {\n    itemsToActivate: ['infoLink'],\n    itemsToDeactivate: ['booksLink', 'seriesLink'],\n    selectorsToShow: ['info'],\n    selectorsToHide: ['books', 'sorting-menu', 'home', 'series', 'whattoread']\n  },\n  livres: {\n    itemsToActivate: ['booksLink'],\n    itemsToDeactivate: ['infoLink', 'seriesLink'],\n    selectorsToShow: ['books', 'sorting-menu'],\n    selectorsToHide: ['info', 'home', 'series', 'whattoread']\n  }, \n  series: {\n    itemsToActivate: ['seriesLink'],\n    itemsToDeactivate: ['infoLink', 'booksLink'],\n    selectorsToShow: ['series'],\n    selectorsToHide: ['home', 'books', 'sorting-menu', 'info', 'whattoread']\n  },\n  'que-choisir': {\n    itemsToActivate: [],\n    itemsToDeactivate: ['infoLink', 'booksLink', 'seriesLink'],\n    selectorsToShow: ['whattoread'],\n    selectorsToHide: ['home', 'books', 'sorting-menu', 'info', 'series']\n  }\n}\n\n/**\n * Show the menu that fit the given id\n */\nexport function showMenu(menuId) {\n  window.baseURL = menuId\n  let { \n    itemsToActivate, \n    itemsToDeactivate, \n    selectorsToShow, \n    selectorsToHide \n  } = menusConfig[menuId]\n  itemsToActivate.forEach((itemToActivate) => {\n    activateSidebarItem(itemToActivate)\n  })\n  itemsToDeactivate.forEach((itemToDeactivate) => {\n    deactivateSidebarItem(itemToDeactivate)\n  })\n  toggleClass(selectorsToShow, 'hidden', false)\n  toggleClass(selectorsToHide, 'hidden', true)\n  deactivateMenu()\n}\n","import { select, toggleClass, getURL } from './generics'\n\n/**\n * Rearrange the list of books\n */\nexport function sortBy(attribute) {\n  [...select('books-list').children]\n    .sort((a,b) => a.getAttribute(attribute) > b.getAttribute(attribute) ? 1 : -1)\n    .forEach(node => select('books-list').appendChild(node))\n}\n\n/**\n * Sort the list of books by chronological order\n */\nexport function sortByChrono() {\n  // Sort the list\n  sortBy('data-chrono')\n  // Update dropdown state\n  select('sorting').textContent = 'Ordre chronologique'\n  select('sorting').setAttribute('href', getURL())\n  toggleClass(['sorting-date', 'sorting-latest'], 'pure-menu-selected', false)\n  toggleClass(['sorting-chrono'], 'pure-menu-selected', true)\n}\n\n/**\n * Sort the list of books by publishing date order (oldest first)\n */\nexport function sortByDate() {\n  // Sort the list\n  sortBy('data-date')\n  // Update dropdown state\n  select('sorting').textContent = 'Date de publication'\n  select('sorting').setAttribute('href', '#livres?sorting=date')\n  toggleClass(['sorting-chrono', 'sorting-latest'], 'pure-menu-selected', false)\n  toggleClass(['sorting-date'], 'pure-menu-selected', true)\n}\n\n/**\n * Sort the list of books by publishing date order (latest first)\n */\nexport function sortByLatest() {\n  // Sort the list\n  sortBy('data-latest')\n  // Update dropdown state\n  select('sorting').textContent = 'Plus rÃ©cent'\n  select('sorting').setAttribute('href', '#livres?sorting=latest')\n  toggleClass(['sorting-chrono', 'sorting-date'], 'pure-menu-selected', false)\n  toggleClass(['sorting-latest'], 'pure-menu-selected', true)\n}\n","import { select, getURL } from './generics'\nimport { showMenu } from './sidebar'\nimport { sortByDate, sortByChrono, sortByLatest } from './header'\n\n/**\n * Update sorting parameter\n * Change window location hash via href to trigger page set up\n */\nexport function setSorting(param) {\n  window.sortingParam = `sorting=${param}`\n  let sortingLink = `sorting-${param}`\n  select(sortingLink).setAttribute('href', getURL())\n}\n\n/**\n * Set up the page depending on the current URL\n */\nexport function setUpPage() {\n  let hash = window.location.hash\n  if (hash.includes('#menu')) {\n    // Do nothing if the burger icon is clicked\n    return\n  }\n  if (hash.includes('#info')) {\n    showMenu('info')\n  } else if (hash.includes('#livres')) {\n    showMenu('livres')\n    if (hash.includes('?')) {\n      let strParams = hash.split('?').reverse()[0]\n      let params = strParams.split('&') || strParams\n      params.forEach((param) => {\n        switch (param) {\n        default:\n          break\n        case 'sorting=date':\n          setSorting('date')\n          sortByDate()\n          break\n        case 'sorting=chrono':\n          setSorting('chrono')\n          sortByChrono()\n          break\n        case 'sorting=latest':\n          setSorting('latest')\n          sortByLatest()\n          break\n        }\n      })\n    }\n  } else if (hash.includes('#series')) {\n    showMenu('series')\n  } else if (hash.includes('#que-choisir')) {\n    showMenu('que-choisir')\n  } else {\n    showMenu('home')\n  }\n}","import { setSorting, setUpPage } from './utils/setup-page'\nimport { deactivateMenu, toggleMenu } from './utils/sidebar'\nimport { setupQuestions } from './utils/what-to-read'\n\n/**\n * Detection of a URL change reset the page\n */\nwindow.onhashchange = function() {\n  setUpPage()\n}\n\n/**\n * setUpPage called when DOM is loaded\n */\nwindow.onload = function() {\n  setUpPage()\n  setupQuestions()\n}\n\n/**\n * Methods bound to DOM elements need to be assigned globally \n */\nwindow.setSorting = setSorting\nwindow.deactivateMenu = deactivateMenu\nwindow.toggleMenu = toggleMenu\n\nwindow.score = { suzuha: 0, ede: 0, vdy: 0 }\nwindow.tmpScore = { suzuha: 0, ede: 0, vdy: 0 }\nwindow.selectedAnswer = undefined\nwindow.questions = []\nwindow.questionIndex = 0\n"],"names":["$5ec627a5b60dc0b3$export$43198dabd5255679","$jYHEd","toggleClass","$5ec627a5b60dc0b3$var$menusConfig","home","itemsToActivate","itemsToDeactivate","selectorsToShow","selectorsToHide","info","livres","series","$5ec627a5b60dc0b3$export$978857af675b1906","menuId","window","baseURL","_menuId","forEach","itemToActivate","itemId","select","classList","add","children","setAttribute","itemToDeactivate","remove","removeAttribute","$b777fe0faf1333de$export$b035e44d7bb4278f","attribute","sort","a","b","getAttribute","node","appendChild","$99207e1c505eaf57$export$4a9546366d995304","param","sortingParam","concat","sortingLink","getURL","$99207e1c505eaf57$export$a72797da4aec4926","hash","location","includes","strParams","split","reverse","textContent","onhashchange","onload","$12Wwg","setupQuestions","setSorting","deactivateMenu","toggleMenu","active","toggle","score","suzuha","ede","vdy","tmpScore","selectedAnswer","undefined","questions","questionIndex"],"version":3,"file":"index.01183dfd.js.map"}