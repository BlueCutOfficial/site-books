import{D as e,F as t,G as o}from"./main-D2Jdyf1l.js";let i=e;{function r(e){throw new Error(`You attempted to define the '${e}' method on a Glimmer Component, but that lifecycle hook does not exist in Ember.js applications, it only exists in Glimmer.js apps. You can rename this method, and you can trigger it using a modifier such as {{did-insert}} from '@ember/render-modifiers': https://github.com/emberjs/ember-render-modifiers.`)}function s(e){throw new Error(`You attempted to access the '${e}' property on a Glimmer Component, but that property does not exist in Ember.js applications, it only exists in Glimmer.js apps. You define a class field with the same name on your component class and it will overwrite this error message, but it will not be used by the framework.`)}i=class extends i{constructor(e,t){super(e,t),"function"==typeof this.didInsertElement&&r("didInsertElement"),"function"==typeof this.didUpdate&&r("didUpdate")}};let a=i.prototype;function m(e,t,o){Object.defineProperty(e,t,{get:()=>o(t),set(e){Object.defineProperty(this,t,{value:e})}})}m(a,"bounds",s),m(a,"element",s),m(a,"debugName",s)}t(e=>new o(e),i);const n=i;export{n as C};
