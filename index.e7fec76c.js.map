{"mappings":"SAiCOA,EAAIC,OACQC,EAAcC,mBAAAC,EAAA,OAAAC,EAAA,cAAAC,EAAA,kBAAAC,EAAAC,OAAAC,gBAAAD,OAAAC,eAAA,gBAAA,aAAA,YAAAC,EAAAC,iBAAA,uBAAA,wDAO1BA,KAAIC,MAAAC,aAAAR,GAAA,QACES,OARoB,yBAAA,SAYtBA,gFAIJH,KAAMI,MAAAC,oBAhBoB,SAqB5BC,OAAC,WACFN,KAtB6B,IAsB3BA,KAAAG,OAAc,OAAA,gBAGbI,KAAA,SAAeC,KACfC,oBACAC,kBAGLV,KAAAW,gBAAsBrB,OACjBc,MAAMJ,KAAAW,gBAAaC,cAAuBjB,QAC1CM,MAAMD,KAAAW,gBAAsBC,cAhCF,4BAiC1BC,eAAMb,KAAaC,MAAAW,cAAiBjB,QAErCS,MAAQF,aACL,gBAAM,aAETD,MAAGC,aAAaT,EAAW,sFAG3BQ,MAAQC,aACL,cAAM,mBAENY,KAAAd,KAAaC,MAAAc,iBAAqB,OAAA,SAAAC,kDAK9BF,KAAAd,KAAAC,MAAgBc,iBAAQ,MAAa,SAAAC,GAC9CA,EAAEd,aAAAT,EAAe,gEAKnBe,EAAAC,kBACAD,EAAAE,mBACMJ,qBAWJW,iBAAA,WAAA,SAAAT,OACIU,EAAUC,EAAcC,EAAAC,EAAoBC,EAMhD,GA3E6B,IA2E7BvB,EAAAI,SAEEJ,EAAAE,MACAW,cA9E2B,0BA+EnBb,EAAAE,MAAAW,cAAA,UAIR,KAAAJ,EAAAe,QAEAxB,EAAAQ,KAAAC,GACAT,EAAAyB,YACA,GAAA,KAAAhB,EAAAe,QAAA,KACkBxB,EAAIQ,KAAAC,GAItBY,EAAAF,EAAAA,EAAAO,WAAAL,YAA6D,QAK7C,IAAdA,EAAcM,UAAAN,EAAAA,EAAAA,cAITA,EAAkBA,EAAMR,cAAc,mBAAA,KAG7CM,EACAI,GAAmBA,EAAAjB,QADnBN,EAAAE,MAAAW,cAAiC,mBAAAP,gBAES,KAAhBG,EAAAe,QAAgB,KAG1BxB,EAAAQ,KAAAC,KAGdU,EAAUA,EAAcO,WAAAN,gBAAA,QAIN,IAAlBA,EAAkBO,UAAAP,EAAAA,EAAAA,4DAKxBD,EACSG,GAAiBA,EAAahB,QADvCN,EAAAE,MAAAW,cAAwC,8CAAAP,qBAKpCY,iBAAcrB,GAAA,SAAAY,8DAMXT,EAAAK,MAAAuB,uBAOT,+DAAAC,EAAA,EAAAA,EAAAC,EAAaC,OAAAF","sources":["js/pure-dropdown.js"],"sourcesContent":["/**\r\n * This script is provided by Pure CSS documentation to implement some keyboard control on dropdowns\r\n * Menu documentation page: https://purecss.io/menus/\r\n * Script location: https://purecss.io/js/menus.js\r\n */\r\n\r\n'use strict'\r\n\r\n// Enable drop-down menus in Pure\r\n// Inspired by YUI3 gallery-simple-menu by Julien LeComte\r\n// [https://github.com/yui/yui3-gallery/blob/master/src/gallery-simple-menu/js/simple-menu.js]\r\n\r\nfunction PureDropdown(dropdownParent) {\r\n\r\n  let PREFIX = 'pure-',\r\n    ACTIVE_CLASS_NAME = PREFIX + 'menu-active',\r\n    ARIA_ROLE = 'role',\r\n    ARIA_HIDDEN = 'aria-hidden',\r\n    MENU_OPEN = 0,\r\n    MENU_CLOSED = 1,\r\n    MENU_ACTIVE_SELECTOR = '.pure-menu-active',\r\n    MENU_LINK_SELECTOR = '.pure-menu-link',\r\n    MENU_SELECTOR = '.pure-menu-children',\r\n    DISMISS_EVENT = (window.hasOwnProperty &&\r\n      window.hasOwnProperty('ontouchstart')) ?\r\n      'touchstart' : 'mousedown',\r\n\r\n    ARROW_KEYS_ENABLED = true,\r\n\r\n    ddm = this // drop down menu\r\n\r\n  this._state = MENU_CLOSED\r\n\r\n  this.show = function () {\r\n    if (this._state !== MENU_OPEN) {\r\n      this._dropdownParent.classList.add(ACTIVE_CLASS_NAME)\r\n      this._menu.setAttribute(ARIA_HIDDEN, false)\r\n      this._state = MENU_OPEN\r\n    }\r\n  }\r\n\r\n  this.hide = function () {\r\n    if (this._state !== MENU_CLOSED) {\r\n      this._dropdownParent.classList.remove(ACTIVE_CLASS_NAME)\r\n      this._menu.setAttribute(ARIA_HIDDEN, true)\r\n      this._link.focus()\r\n      this._state = MENU_CLOSED\r\n    }\r\n  }\r\n\r\n  this.toggle = function () {\r\n    this[this._state === MENU_CLOSED ? 'show' : 'hide']()\r\n  }\r\n\r\n  this.halt = function (e) {\r\n    e.stopPropagation()\r\n    e.preventDefault()\r\n  }\r\n\r\n  this._dropdownParent = dropdownParent\r\n  this._link = this._dropdownParent.querySelector(MENU_LINK_SELECTOR)\r\n  this._menu = this._dropdownParent.querySelector(MENU_SELECTOR)\r\n  this._firstMenuLink = this._menu.querySelector(MENU_LINK_SELECTOR)\r\n\r\n  // Set ARIA attributes\r\n  this._link.setAttribute('aria-haspopup', 'true')\r\n  this._menu.setAttribute(ARIA_ROLE, 'menu')\r\n  this._menu.setAttribute('aria-labelledby', this._link.getAttribute('id'))\r\n  this._menu.setAttribute('aria-hidden', 'true')\r\n  ;[].forEach.call(\r\n    this._menu.querySelectorAll('li'),\r\n    function(el){\r\n      el.setAttribute(ARIA_ROLE, 'presentation')\r\n    }\r\n  )\r\n  ;[].forEach.call(\r\n    this._menu.querySelectorAll('a'),\r\n    function(el){\r\n      el.setAttribute(ARIA_ROLE, 'menuitem')\r\n    }\r\n  )\r\n\r\n  // Toggle on click\r\n  this._link.addEventListener('click', function (e) {\r\n    e.stopPropagation()\r\n    e.preventDefault()\r\n    ddm.toggle()\r\n  })\r\n\r\n  // Keyboard navigation\r\n  document.addEventListener('keydown', function (e) {\r\n    let currentLink,\r\n      previousSibling,\r\n      nextSibling,\r\n      previousLink,\r\n      nextLink\r\n\r\n    // if the menu isn't active, ignore\r\n    if (ddm._state !== MENU_OPEN) {\r\n      return\r\n    }\r\n\r\n    // if the menu is the parent of an open, active submenu, ignore\r\n    if (ddm._menu.querySelector(MENU_ACTIVE_SELECTOR)) {\r\n      return\r\n    }\r\n\r\n    currentLink = ddm._menu.querySelector(':focus')\r\n\r\n    // Dismiss an open menu on ESC\r\n    if (e.keyCode === 27) {\r\n      /* Esc */\r\n      ddm.halt(e)\r\n      ddm.hide()\r\n    }\r\n    // Go to the next link on down arrow\r\n    else if (ARROW_KEYS_ENABLED && e.keyCode === 40) {\r\n      /* Down arrow */\r\n      ddm.halt(e)\r\n      // get the nextSibling (an LI) of the current link's LI\r\n      nextSibling = (currentLink) ? currentLink.parentNode.nextSibling : null\r\n      // if the nextSibling is a text node (not an element), go to the next one\r\n      while (nextSibling && nextSibling.nodeType !== 1) {\r\n        nextSibling = nextSibling.nextSibling\r\n      }\r\n      nextLink = (nextSibling) ? nextSibling.querySelector('.pure-menu-link') : null\r\n      // if there is no currently focused link, focus the first one\r\n      if (!currentLink) {\r\n        ddm._menu.querySelector('.pure-menu-link').focus()\r\n      }\r\n      else if (nextLink) {\r\n        nextLink.focus()\r\n      }\r\n    }\r\n    // Go to the previous link on up arrow\r\n    else if (ARROW_KEYS_ENABLED && e.keyCode === 38) {\r\n      /* Up arrow */\r\n      ddm.halt(e)\r\n      // get the currently focused link\r\n      previousSibling = (currentLink) ? currentLink.parentNode.previousSibling : null\r\n      while (previousSibling && previousSibling.nodeType !== 1) {\r\n        previousSibling = previousSibling.previousSibling\r\n      }\r\n      previousLink = (previousSibling) ? previousSibling.querySelector('.pure-menu-link') : null\r\n      // if there is no currently focused link, focus the last link\r\n      if (!currentLink) {\r\n        ddm._menu.querySelector('.pure-menu-item:last-child .pure-menu-link').focus()\r\n      }\r\n      // else if there is a previous item, go to the previous item\r\n      else if (previousLink) {\r\n        previousLink.focus()\r\n      }\r\n    }\r\n  })\r\n\r\n  // Dismiss an open menu on outside event\r\n  document.addEventListener(DISMISS_EVENT, function (e) {\r\n    let target = e.target\r\n    if (target !== ddm._link && !ddm._menu.contains(target)) {\r\n      ddm.hide()\r\n      ddm._link.blur()\r\n    }\r\n  })\r\n\r\n}\r\n\r\nfunction initDropdowns() {\r\n  let dropdownParents = document.querySelectorAll('.pure-menu-has-children')\r\n  for (let i = 0; i < dropdownParents.length; i++) {\r\n    let ddm = new PureDropdown(dropdownParents[i])\r\n  }\r\n}\r\n\r\ninitDropdowns()\r\n\r\n\r\n"],"names":["$5fe6fb5666a82e3f$var$PureDropdown","dropdownParent","ACTIVE_CLASS_NAME","PREFIX","ARIA_ROLE","ARIA_HIDDEN","MENU_LINK_SELECTOR","DISMISS_EVENT","window","hasOwnProperty","ddm","this","_menu","setAttribute","_state","_link","focus","toggle","halt","e","stopPropagation","preventDefault","_dropdownParent","querySelector","_firstMenuLink","call","querySelectorAll","el","addEventListener","currentLink","previousSibling","nextSibling","previousLink","nextLink","keyCode","hide","parentNode","nodeType","blur","i","dropdownParents","length"],"version":3,"file":"index.e7fec76c.js.map"}