{"mappings":"2gBAKgBA,IACdC,EAAAC,YAAW,uCAA2C,GAkBtD,MAciC,uBAA0B,sBACzD,qDACyB,yBAAkC,+BAEzD,SACF,oBACA,iBAA+B,aAC/BC,kBAAe,2CACU,yBAAkC,+BAEvD,SACJ,sBACA,iBAA8B,cAC9BA,kBAAe,0BACfC,gBAAe,yCAAyC,eAEpD,SACJ,sBACA,iBAA8B,eAC9BD,kBAAe,yCACS,2BAAiC,+BAE3D,OACE,6BACgC,iBAAyB,sBACzD,qDACwB,+BAAiC,sCAO7C,qBASZE,EAAoBC,oBAEtB,IAAAC,EAAAC,EAA2BF,GAAgBG,EAAAF,EAAAE,gBAAAN,EAAAI,EAAAJ,kBAAAC,EAAAG,EAAAH,gBAAAM,EAAAH,EAAAG,kBACzCC,SAAA,SAAAC,GA3DF,IAAwCC,EAAAA,oDAG1CZ,EAAAa,OAEGD,GACCE,SAAA,GAAAC,aAAA,eAAqB,WAwDvBb,EAAAQ,SAAA,SAAAM,GAnDe,IAAAJ,EAAAA,EAoDDI,EAnDdhB,EAAIa,OAAAD,GAAAK,UAAAC,OAAA,wBACFL,OAAAD,GAAAE,SAAA,GAAAK,gBAAA,wHChCYC,EAAOC,uBACjBrB,EAAAa,OAAM,SAAUC,UACjBQ,MAAI,SAAEC,EAAEC,UAAMD,EAAEE,aAAaJ,GAAaG,EAAEC,aAAaJ,GAAa,GAAI,KAC1EX,SAAO,SAACgB,UAAQ1B,EAAAa,OAAM,SAAUc,YAAYD,eCAjCE,EAAWC,GACzBC,OAAOC,aAAY,WAAoBC,OAANH,OAC7BI,EAAW,WAAoBD,OAANH,GAC7B7B,EAAAa,OAAOoB,GAAalB,aAAY,OAASf,EAAAkC,mBAM3BC,QACVC,EAAON,OAAOO,SAASD,SACvBA,EAAKE,SAAQ,YAIbF,EAAKE,SAAQ,SACflC,EAAQ,gBACCgC,EAAKE,SAAQ,eACtBlC,EAAQ,UACJgC,EAAKE,SAAQ,KAAI,KACfC,EAAYH,EAAKI,MAAK,KAAMC,UAAU,IAC7BF,EAAUC,MAAK,MAASD,GAC9B7B,SAAO,SAAEmB,UACNA,oCAIND,EAAU,QDNlBR,EAAM,aAENpB,EAAAa,OAAM,WAAY6B,YAAW,sBAC7B1C,EAAAa,OAAM,WAAYE,aAAY,OAAO,wBACrCf,EAAAC,YAAW,0DAA6D,GACxED,EAAAC,YAAW,uCAAyC,8BCK5C2B,EAAU,UDvBlBR,EAAM,eAENpB,EAAAa,OAAM,WAAY6B,YAAW,sBAC7B1C,EAAAa,OAAM,WAAYE,aAAY,OAASf,EAAAkC,UACvClC,EAAAC,YAAW,wDAA2D,GACtED,EAAAC,YAAW,yCAA2C,8BCsB9C2B,EAAU,UDDlBR,EAAM,eAENpB,EAAAa,OAAM,WAAY6B,YAAW,cAC7B1C,EAAAa,OAAM,WAAYE,aAAY,OAAO,0BACrCf,EAAAC,YAAW,wDAA2D,GACtED,EAAAC,YAAW,yCAA2C,aCE3CmC,EAAKE,SAAQ,WACtBlC,EAAQ,UACCgC,EAAKE,SAAQ,gBACtBlC,EAAQ,eAERA,EAAQ,yBClDZ0B,OAAOa,UAAS,kCAShBR,KAQAL,OAAAc,OAAA,WAIAT,IACAU,EAAOC,kBAE6BhB,OAAMiB,WAAAnB,0BAC1CE,OAAOkB,0BHhBDC,EAAM,SACVjD,EAAAa,OAAM,UAAWI,UAAUiC,OAAOD,GAClCjD,EAAAa,OAAM,QAASI,UAAUiC,OAAOD,GAChCjD,EAAAa,OAAM,YAAaI,UAAUiC,OAAOD,WGalBE,MAAS,CAAEC,OAAM,EAAEC,IAAK,SAE5CvB,OAAOwB,SAAS,CAChBF,OAAO","sources":["js/utils/sidebar.js","js/utils/header.js","js/utils/setup-page.js","js/ui.js"],"sourcesContent":["import { select, toggleClass } from './generics'\r\n\r\n/**\r\n * Hide the whole menu to show only the burger icon\r\n */\r\nexport function deactivateMenu() {\r\n  toggleClass(['layout', 'menu', 'menuLink'], 'active', false)\r\n}\r\n\r\n/**\r\n * Switch the menu from burger icon to full display\r\n */\r\nexport function toggleMenu() {\r\n  let active = 'active'\r\n  select('layout').classList.toggle(active)\r\n  select('menu').classList.toggle(active)\r\n  select('menuLink').classList.toggle(active)\r\n}\r\n\r\n/**\r\n * Show the item in parameter active in the sidebar\r\n */\r\nlet activateSidebarItem = function(itemId) {\r\n  select(itemId).classList.add('pure-menu-selected')\r\n  select(itemId).children[0].setAttribute('aria-current', 'page')\r\n}\r\n\r\n/**\r\n * Show the item in parameter inactive in the sidebar\r\n */\r\nlet deactivateSidebarItem = function(itemId) {\r\n  select(itemId).classList.remove('pure-menu-selected')\r\n  select(itemId).children[0].removeAttribute('aria-current')\r\n}\r\n\r\nconst menusConfig = {\r\n  home: {\r\n    itemsToActivate: [],\r\n    itemsToDeactivate: ['booksLink', 'infoLink', 'seriesLink'],\r\n    selectorsToShow: ['home'],\r\n    selectorsToHide: ['books', 'sorting-menu', 'info', 'series', 'whattoread']\r\n  }, \r\n  info: {\r\n    itemsToActivate: ['infoLink'],\r\n    itemsToDeactivate: ['booksLink', 'seriesLink'],\r\n    selectorsToShow: ['info'],\r\n    selectorsToHide: ['books', 'sorting-menu', 'home', 'series', 'whattoread']\r\n  },\r\n  livres: {\r\n    itemsToActivate: ['booksLink'],\r\n    itemsToDeactivate: ['infoLink', 'seriesLink'],\r\n    selectorsToShow: ['books', 'sorting-menu'],\r\n    selectorsToHide: ['info', 'home', 'series', 'whattoread']\r\n  }, \r\n  series: {\r\n    itemsToActivate: ['seriesLink'],\r\n    itemsToDeactivate: ['infoLink', 'booksLink'],\r\n    selectorsToShow: ['series'],\r\n    selectorsToHide: ['home', 'books', 'sorting-menu', 'info', 'whattoread']\r\n  },\r\n  'que-choisir': {\r\n    itemsToActivate: [],\r\n    itemsToDeactivate: ['infoLink', 'booksLink', 'seriesLink'],\r\n    selectorsToShow: ['whattoread'],\r\n    selectorsToHide: ['home', 'books', 'sorting-menu', 'info', 'series']\r\n  }\r\n}\r\n\r\n/**\r\n * Show the menu that fit the given id\r\n */\r\nexport function showMenu(menuId) {\r\n  window.baseURL = menuId\r\n  let { \r\n    itemsToActivate, \r\n    itemsToDeactivate, \r\n    selectorsToShow, \r\n    selectorsToHide \r\n  } = menusConfig[menuId]\r\n  itemsToActivate.forEach((itemToActivate) => {\r\n    activateSidebarItem(itemToActivate)\r\n  })\r\n  itemsToDeactivate.forEach((itemToDeactivate) => {\r\n    deactivateSidebarItem(itemToDeactivate)\r\n  })\r\n  toggleClass(selectorsToShow, 'hidden', false)\r\n  toggleClass(selectorsToHide, 'hidden', true)\r\n  deactivateMenu()\r\n}\r\n","import { select, toggleClass, getURL } from './generics'\r\n\r\n/**\r\n * Rearrange the list of books\r\n */\r\nexport function sortBy(attribute) {\r\n  [...select('books').children]\r\n    .sort((a,b) => a.getAttribute(attribute) > b.getAttribute(attribute) ? 1 : -1)\r\n    .forEach(node => select('books').appendChild(node))\r\n}\r\n\r\n/**\r\n * Sort the list of books by chronological order\r\n */\r\nexport function sortByChrono() {\r\n  // Sort the list\r\n  sortBy('data-chrono')\r\n  // Update dropdown state\r\n  select('sorting').textContent = 'Ordre chronologique'\r\n  select('sorting').setAttribute('href', getURL())\r\n  toggleClass(['sorting-date', 'sorting-latest'], 'pure-menu-selected', false)\r\n  toggleClass(['sorting-chrono'], 'pure-menu-selected', true)\r\n}\r\n\r\n/**\r\n * Sort the list of books by publishing date order (oldest first)\r\n */\r\nexport function sortByDate() {\r\n  // Sort the list\r\n  sortBy('data-date')\r\n  // Update dropdown state\r\n  select('sorting').textContent = 'Date de publication'\r\n  select('sorting').setAttribute('href', '#livres?sorting=date')\r\n  toggleClass(['sorting-chrono', 'sorting-latest'], 'pure-menu-selected', false)\r\n  toggleClass(['sorting-date'], 'pure-menu-selected', true)\r\n}\r\n\r\n/**\r\n * Sort the list of books by publishing date order (latest first)\r\n */\r\nexport function sortByLatest() {\r\n  // Sort the list\r\n  sortBy('data-latest')\r\n  // Update dropdown state\r\n  select('sorting').textContent = 'Plus rÃ©cent'\r\n  select('sorting').setAttribute('href', '#livres?sorting=latest')\r\n  toggleClass(['sorting-chrono', 'sorting-date'], 'pure-menu-selected', false)\r\n  toggleClass(['sorting-latest'], 'pure-menu-selected', true)\r\n}\r\n","import { select, getURL } from './generics'\r\nimport { showMenu } from './sidebar'\r\nimport { sortByDate, sortByChrono, sortByLatest } from './header'\r\n\r\n/**\r\n * Update sorting parameter\r\n * Change window location hash via href to trigger page set up\r\n */\r\nexport function setSorting(param) {\r\n  window.sortingParam = `sorting=${param}`\r\n  let sortingLink = `sorting-${param}`\r\n  select(sortingLink).setAttribute('href', getURL())\r\n}\r\n\r\n/**\r\n * Set up the page depending on the current URL\r\n */\r\nexport function setUpPage() {\r\n  let hash = window.location.hash\r\n  if (hash.includes('#menu')) {\r\n    // Do nothing if the burger icon is clicked\r\n    return\r\n  }\r\n  if (hash.includes('#info')) {\r\n    showMenu('info')\r\n  } else if (hash.includes('#livres')) {\r\n    showMenu('livres')\r\n    if (hash.includes('?')) {\r\n      let strParams = hash.split('?').reverse()[0]\r\n      let params = strParams.split('&') || strParams\r\n      params.forEach((param) => {\r\n        switch (param) {\r\n        default:\r\n          break\r\n        case 'sorting=date':\r\n          setSorting('date')\r\n          sortByDate()\r\n          break\r\n        case 'sorting=chrono':\r\n          setSorting('chrono')\r\n          sortByChrono()\r\n          break\r\n        case 'sorting=latest':\r\n          setSorting('latest')\r\n          sortByLatest()\r\n          break\r\n        }\r\n      })\r\n    }\r\n  } else if (hash.includes('#series')) {\r\n    showMenu('series')\r\n  } else if (hash.includes('#que-choisir')) {\r\n    showMenu('que-choisir')\r\n  } else {\r\n    showMenu('home')\r\n  }\r\n}","import { setSorting, setUpPage } from './utils/setup-page'\r\nimport { deactivateMenu, toggleMenu } from './utils/sidebar'\r\nimport { setupQuestions } from './utils/what-to-read'\r\n\r\nwindow.selectors = {}\r\n\r\n/**\r\n * Detection of a URL change reset the page\r\n */\r\nwindow.onhashchange = function() {\r\n  setUpPage()\r\n}\r\n\r\n/**\r\n * setUpPage called when DOM is loaded\r\n */\r\nwindow.onload = function() {\r\n  setUpPage()\r\n  setupQuestions()\r\n}\r\n\r\n/**\r\n * Methods bound to DOM elements need to be assigned globally \r\n */\r\nwindow.setSorting = setSorting\r\nwindow.deactivateMenu = deactivateMenu\r\nwindow.toggleMenu = toggleMenu\r\n\r\nwindow.score = { suzuha: 0, ede: 0, vdy: 0 }\r\nwindow.tmpScore = { suzuha: 0, ede: 0, vdy: 0 }\r\nwindow.selectedAnswer = undefined\r\nwindow.questions = []\r\nwindow.questionIndex = 0\r\n"],"names":["$26c16eefab73a080$export$cd8972a8990baac8","$4g06v","toggleClass","itemsToDeactivate","selectorsToShow","$26c16eefab73a080$export$5dbacec99f1ab004","menuId","_menuId","$26c16eefab73a080$var$menusConfig","itemsToActivate","selectorsToHide","forEach","itemToActivate","itemId","select","children","setAttribute","itemToDeactivate","classList","remove","removeAttribute","$8c334d96d69f80a5$export$f12f126c3f678727","attribute","sort","a","b","getAttribute","node","appendChild","$f0305caec3381239$export$2b9946960bfb268c","param","window","sortingParam","concat","sortingLink","getURL","$f0305caec3381239$export$6ae4f36b4e746dc2","hash","location","includes","strParams","split","reverse","textContent","selectors","onload","$4URwl","setupQuestions","setSorting","toggleMenu","active","toggle","score","suzuha","ede","tmpScore"],"version":3,"file":"index.c5f2aa3a.js.map"}