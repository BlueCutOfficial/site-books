{"mappings":"moBAAAA,EAAiBC,EAAA,SAAAC,eAAoC,gLCE/CC,EAAS,EACbC,GAAE,OACFC,MAAK,0CACJC,QAAM,EACLF,GAAE,QACFC,MAAK,gBACJE,MAAI,CAAIC,OAAQ,EAAGC,IAAK,EAAGC,IAAK,KAEjCN,GAAE,OACFC,MAAK,qBACLE,MAAK,CAAIC,OAAQ,EAAGC,IAAK,EAAGC,IAAK,KAEjCN,GAAE,qBACFC,MAAK,kCACLE,MAAK,CAAIC,OAAQ,EAAGC,IAAK,EAAGC,IAAK,OAGnCN,GAAE,OACFC,MAAK,8FACJC,QAAM,EACLF,GAAE,OACFC,MAAK,uDACHE,MAAG,CAAIC,OAAQ,EAAGC,IAAK,EAAGC,IAAK,KAEjCN,GAAE,OACFC,MAAK,iEACJE,MAAI,CAAIC,OAAQ,EAAGC,IAAK,EAAGC,IAAK,KAEjCN,GAAE,SACFC,MAAK,6BACJE,MAAI,CAAIC,OAAQ,EAAGC,IAAK,EAAGC,IAAK,OAGnCN,GAAE,OACFC,MAAK,0CACHC,QAAK,EACLF,GAAE,UACFC,MAAK,UACJE,MAAI,CAAIC,OAAQ,EAAGC,IAAK,EAAGC,IAAK,KAEjCN,GAAE,OACFC,MAAK,QACJE,MAAI,CAAIC,OAAQ,EAAGC,IAAK,EAAGC,IAAK,KAEjCN,GAAE,qBACFC,MAAK,kDACLE,MAAK,CAAIC,OAAQ,EAAGC,IAAK,EAAGC,IAAK,OAGnCN,GAAE,WACFC,MAAK,gFACFC,QAAI,EACLF,GAAE,QACFC,MAAK,MACLE,MAAK,CAAIC,OAAQ,EAAGC,IAAK,EAAGC,IAAK,KAEjCN,GAAE,QACFC,MAAK,UACJE,MAAI,CAAIC,OAAQ,EAAGC,IAAK,EAAGC,IAAK,KAEjCN,GAAE,WACFC,MAAK,QACLE,MAAK,CAAIC,OAAQ,EAAGC,IAAK,EAAGC,IAAK,OAGnCN,GAAE,QACFC,MAAK,iEACJC,QAAM,EACLF,GAAE,WACFC,MAAK,YACJE,MAAI,CAAIC,OAAQ,EAAGC,IAAK,EAAGC,IAAK,KAEjCN,GAAE,UACFC,MAAK,SACLE,MAAK,CAAIC,OAAQ,EAAGC,IAAK,EAAGC,IAAK,KAEjCN,GAAE,gBACFC,MAAK,oBACLE,MAAK,CAAIC,OAAQ,EAAGC,IAAK,EAAGC,IAAK,OAGnCN,GAAE,YACFC,MAAK,uDACLC,QAAO,EACLF,GAAE,QACFC,MAAK,4EACHE,MAAG,CAAIC,OAAQ,EAAGC,IAAK,EAAGC,IAAK,KAEjCN,GAAE,WACFC,MAAK,sDACHE,MAAG,CAAIC,OAAQ,EAAGC,IAAK,EAAGC,IAAK,KAEjCN,GAAE,MACFC,MAAK,sEACLE,MAAK,CAAIC,OAAQ,EAAGC,IAAK,EAAGC,IAAK,OAGnCN,GAAE,MACFC,MAAK,iDACHC,QAAK,EACLF,GAAE,WACFC,MAAK,cACJE,MAAI,CAAIC,OAAQ,EAAGC,IAAK,EAAGC,IAAK,KAEjCN,GAAE,eACFC,MAAK,gBACJE,MAAI,CAAIC,OAAQ,EAAGC,IAAK,EAAGC,IAAK,KAEjCN,GAAE,YACFC,MAAK,qCACLE,MAAK,CAAIC,OAAQ,EAAGC,IAAK,EAAGC,IAAK,gBAIrBC,IAEdC,OAAOC,UAAYV,EAAUW,MAAI,kBAAOC,KAAKC,SAAW,MACzBC,EAAAC,OAAM,uBACZC,aAAY,mBAAqBP,OAAOC,UAAUO,QAE3EC,IAEyBJ,EAAAC,OAAM,mBACZI,iBAAgB,QAAUC,YAG/BC,EAAaC,GAC3Bb,OAAOc,eAAiBD,EACxBE,iBAYF,OAAAf,OAAAgB,cAAAhB,OAAAC,UAAAO,OAAAR,OAAAC,UAAAD,OAAAgB,oBAAAC,WAUOF,UAAAG,IAA2CxB,QAAAyB,MAAA,SAA3CC,iBACIpB,OAASc,+CADb,IAAA,IAASO,EAATC,EAASC,OAAAC,QAAAxB,OAAAyB,UAAAC,OAAAC,cAAAC,GAAAP,EAAAC,EAAAO,QAAAC,MAAAF,GAAA,EAAA,0IAGd,QACI,GAAAG,EACJ,MAAkBC,GASlB3B,EAAAC,OAAA,cACAC,aAAA,QAAA0B,KAA2CC,UAAAlC,OAAAyB,WAI3C,SAAAhB,IAEAT,OAAAc,eAAwBI,IAAgCxB,QAAO,GAAAF,OAItCa,EAAAC,OAAA,gBACuBC,aAAA,WAAA0B,KAAAC,UAAAhB,MAE5Bb,EAAAC,OAAA,uBAChBC,aAAY,iBACdP,OAAAgB,cAAa,YAGXL,cAEFwB,OAAAnC,OAAAL,MAAmByC,EAASC,aAAY,4BAGxCrB,qBACyBP,WAErBO,gBAAAhB,OAA2BC,UAAAO,OAAA,EACNH,EAAAC,OAAY,mBACjCgC,UAAwB,eAC5B,GAAAtC,OAAAgB,gBAAsBhB,OAAgBC,UAAQO,OAAA,wQChMlC+B,EAAO/C,OACjBgD,EAAWxC,OAAOyC,UAAUjD,UAC3BgD,IACHA,EAAWE,SAASC,eAAenD,GACnCQ,OAAOyC,UAAUjD,GAAKgD,GAEjBA,WAMOI,EAAYH,EAAWI,EAAaC,GAClDL,EAAUM,SAAO,SAAEvD,GACbsD,EACFP,EAAO/C,GAAIwD,UAAUC,IAAIJ,GAEzBN,EAAO/C,GAAIwD,UAAUE,OAAOL,eASlBM,cACeC,OAAlBpD,OAAOqD,QAAO,KAAwBD,OAApBpD,OAAOsD,iIC5BhCC,EAAW,SAAAC,YAAXD,gCAAAA,wDAAAA,GAAWE,KAAAC,QAyBRC,QAAUjB,SAASkB,cAAa,WACjCC,EAAMC,EAAQC,aAAY,CAAEC,KAAI,kBACpCH,EAAOvB,UAAS,iJAE0Cc,OAATa,EAAA7E,GAAQ,YAEzDyE,EAAOK,YAAWJ,EAAMH,6BA/BtBJ,EAAWC,iBAAXD,EAAW,EAMfY,IAAwB,0CAACC,EAAGC,EAAUC,GAEnB,OAAbD,GAAiBX,KACda,8BAGHC,EAAWvC,KAAKwC,MAAMH,QAErBI,aAAaF,QAEbG,0BAGPR,IAAoB,6CACbI,6BAcPJ,IAAoB,wCACCT,KAAQC,QAAQiB,iBAAgB,UACnC7B,QAAO,SAAE8B,GACvBA,EAAQnE,iBAAgB,SAASgD,KAAOoB,8BAI5CX,IAAuB,2CACFT,KAAQC,QAAQiB,iBAAgB,UACnC7B,QAAO,SAAE8B,GACvBA,EAAQE,oBAAmB,SAASrB,KAAOoB,8BAI/CX,IAAY,8BAACa,GACXC,EAAAC,aAAaF,EAAMG,OAAOtE,UAG5BsD,IAAY,8BAACK,OACPY,EAAO,GACPC,GAAQ,EACRC,EAAO,WACXd,EAAS9E,QAAQqD,SAAO,SAAEwC,GACxBH,GAAO,sDAE4DhC,OAArCmC,EAAO/F,GAAE,6BAAyC4D,OAAbmC,EAAO/F,GAAE,KAC1D4D,OAD8DkC,EAAO,6BACvDlC,OAAdmC,EAAO/F,GAAE,MAAkB4D,OAAbmC,EAAO9F,MAAK,oCAGxC4F,IACFA,GAAQ,EACRC,EAAO,YAGN3B,QAAQrB,UAAS,cAElBc,OADGoB,EAAS/E,MAAK,gBACT2D,OAARgC,EAAO,eApEFjB,IAAkB,2DAFzBZ,EAAW,mBAASiC,cA2E1BC,eAAeC,OAAM,eAAiBnC","sources":["node_modules/@parcel/runtime-js/lib/runtime-bb90c3467927a23f.js","js/utils/what-to-read.js","js/utils/generics.js","js/adr-question.js"],"sourcesContent":["module.exports = require('./bundle-url').getBundleURL() + \"style.9595e6cf.css\"","import { select } from './generics'\r\n\r\nconst questions = [{\r\n  id: 'size',\r\n  label: 'Plutôt roman court ou roman plus long ?',\r\n  choices: [{\r\n    id: 'short',\r\n    label: 'Plutôt court.',\r\n    score: { suzuha: 3, ede: 0, vdy: 0 }\r\n  }, {\r\n    id: 'long',\r\n    label: 'Histoire qui dure.',\r\n    score: { suzuha: 0, ede: 2, vdy: 2 }\r\n  }, {\r\n    id: 'no-size-preference',\r\n    label: 'C\\'est pas la taille qui compte.',\r\n    score: { suzuha: 0, ede: 0, vdy: 0 }\r\n  }]\r\n}, {\r\n  id: 'pace',\r\n  label: 'Quel rythme de lecture recherchez-vous ? Êtes-vous dans l\\'action ou dans la contemplation ?',\r\n  choices: [{\r\n    id: 'fast',\r\n    label: 'J\\'aime quand les événements s\\'enchainent rapidement.',\r\n    score: { suzuha: 3, ede: 3, vdy: 1 }\r\n  }, {\r\n    id: 'slow',\r\n    label: 'Je veux m\\'imprégner de l\\'ambiance avec de belles descriptions.',\r\n    score: { suzuha: 1, ede: 2, vdy: 3 }\r\n  }, {\r\n    id: 'middle',\r\n    label: 'Tout est dans l\\'équilibre.',\r\n    score: { suzuha: 1, ede: 3, vdy: 2 }\r\n  }]\r\n}, {\r\n  id: 'time',\r\n  label: 'Quel temps de narration préférez-vous ?',\r\n  choices: [{\r\n    id: 'present',\r\n    label: 'Présent',\r\n    score: { suzuha: 3, ede: 3, vdy: 0 }\r\n  }, {\r\n    id: 'past',\r\n    label: 'Passé',\r\n    score: { suzuha: 0, ede: 0, vdy: 3 }\r\n  }, {\r\n    id: 'no-time-preference',\r\n    label: 'Aucune importance, tant que le style m\\'emporte.',\r\n    score: { suzuha: 0, ede: 0, vdy: 0 }\r\n  }]\r\n}, {\r\n  id: 'affinity',\r\n  label: 'Y a-t-il un élément du cercle de la magie qui vous inspire particulièrement ?',\r\n  choices: [{\r\n    id: 'water',\r\n    label: 'Eau',\r\n    score: { suzuha: 3, ede: 2, vdy: 0 }\r\n  }, {\r\n    id: 'light',\r\n    label: 'Lumière',\r\n    score: { suzuha: 0, ede: 3, vdy: 3 }\r\n  }, {\r\n    id: 'darkness',\r\n    label: 'Ombre',\r\n    score: { suzuha: 0, ede: 3, vdy: 0 }\r\n  }]\r\n}, {\r\n  id: 'theme',\r\n  label: 'Parmi les thématiques suivantes, laquelle vous parle le plus ?',\r\n  choices: [{\r\n    id: 'feminism',\r\n    label: 'Féminisme',\r\n    score: { suzuha: 3, ede: 1, vdy: 1 }\r\n  }, {\r\n    id: 'journey',\r\n    label: 'Voyage',\r\n    score: { suzuha: 1, ede: 3, vdy: 1 }\r\n  }, {\r\n    id: 'culture-shock',\r\n    label: 'Choc des cultures',\r\n    score: { suzuha: 1, ede: 2, vdy: 3 }\r\n  }]\r\n}, {\r\n  id: 'character',\r\n  label: 'Quel genre de personnage avez-vous envie de suivre ?',\r\n  choices: [{\r\n    id: 'heros',\r\n    label: 'Une héroïne dans la pure tradition, gentille, courageuse et travailleuse.',\r\n    score: { suzuha: 3, ede: 0, vdy: 0 }\r\n  }, {\r\n    id: 'dark-man',\r\n    label: 'Un jeune homme qui a ses défauts et un lourd passé.',\r\n    score: { suzuha: 0, ede: 1, vdy: 3 }\r\n  }, {\r\n    id: 'duo',\r\n    label: 'Et pourquoi pas deux personnages dont les chemins vont se croiser ?',\r\n    score: { suzuha: 0, ede: 3, vdy: 0 }\r\n  }]\r\n}, {\r\n  id: 'pet',\r\n  label: 'Le compagnon idéal du rôdeur qui est en vous ?',\r\n  choices: [{\r\n    id: 'squirrel',\r\n    label: 'Un écureuil',\r\n    score: { suzuha: 0, ede: 3, vdy: 0 }\r\n  }, {\r\n    id: 'dragon-tiger',\r\n    label: 'Un GROS félin',\r\n    score: { suzuha: 3, ede: 0, vdy: 0 }\r\n  }, {\r\n    id: 'no-animal',\r\n    label: 'Je préfère les arbres aux animaux.',\r\n    score: { suzuha: 0, ede: 0, vdy: 3 }\r\n  }]\r\n}]\r\n\r\nexport function setupQuestions() {\r\n  // Set up the list of questions in a random order\r\n  window.questions = questions.sort(() => Math.random() - 0.5);\r\n  let adrQuestionNumberElement = select('wtr-question-number')\r\n  adrQuestionNumberElement.setAttribute('questions-length', window.questions.length)\r\n  // Initialize the current question\r\n  _showQuestion()\r\n  // Bind the next question function to the next question button's click\r\n  let nextQuestionButton = select('wtr-button-next')\r\n  nextQuestionButton.addEventListener('click', _nextQuestion)\r\n}\r\n\r\nexport function updateAnswer(value) {\r\n  window.selectedAnswer = value \r\n  _computeTmpScore()\r\n}\r\n\r\n/*\r\n * Return the structure of the current question, based on \"window.questionIndex\"\r\n */\r\nfunction _getQuestion() {\r\n  return window.questionIndex < window.questions.length \r\n    ? window.questions[window.questionIndex]\r\n    : undefined\r\n}\r\n\r\n/*\r\n * Update the temporay score \"window.tmpScore\".\r\n * It is the sum of the actual score and the current question score.\r\n * It should be updated each time the selected answer changes.\r\n */\r\nfunction _computeTmpScore() {\r\n  // Compute the temporary score from actual score and current question\r\n  let questionScore = _getQuestion().choices.find(({ id }) => {\r\n    return id === window.selectedAnswer\r\n  }).score\r\n  for (let [key] of Object.entries(window.tmpScore)) {\r\n    window.tmpScore[key] = window.score[key] + questionScore[key]\r\n  }\r\n  // Update the result list order\r\n  let resultListElement = select('wtr-result')\r\n  resultListElement.setAttribute('score', JSON.stringify(window.tmpScore))\r\n}\r\n\r\n/*\r\n * Update the question component attributes to display the current question.\r\n */\r\nfunction _showQuestion() {\r\n  // Initialize the selected answer and the temporary score \r\n  window.selectedAnswer = _getQuestion().choices[0].id\r\n  _computeTmpScore()\r\n  // Select the question component in the DOM\r\n  let adrQuestionElement = select('wtr-question')\r\n  // It needs the question structure\r\n  adrQuestionElement.setAttribute('question', JSON.stringify(_getQuestion()))\r\n  // Display the question number\r\n  let adrQuestionNumberElement = select('wtr-question-number')\r\n  adrQuestionNumberElement.setAttribute('question-index', window.questionIndex+1)\r\n}\r\n\r\nfunction _nextQuestion() {\r\n  // Finalize current score\r\n  Object.assign(window.score, { ...window.tmpScore })\r\n  // Show next question\r\n  window.questionIndex++\r\n  if (_getQuestion()) {\r\n    _showQuestion()\r\n  }\r\n  // If the last question is reached, change the button text, then hide all\r\n  if (window.questionIndex === window.questions.length-1) {\r\n    let nextQuestionButton = select('wtr-button-next')\r\n    nextQuestionButton.innerHTML = 'Valider'\r\n  } else if (window.questionIndex === window.questions.length) {\r\n    let nextQuestionButton = select('wtr-button-next')\r\n    nextQuestionButton.setAttribute('hidden', true)\r\n    let adrQuestionElement = select('wtr-question')\r\n    adrQuestionElement.setAttribute('hidden', true)\r\n    let adrQuestionNumberElement = select('wtr-question-number')\r\n    adrQuestionNumberElement.setAttribute('hidden', true)\r\n    let adrLinkToBooksElement = select('wtr-see-books')\r\n    adrLinkToBooksElement.removeAttribute('hidden')\r\n  }\r\n}\r\n","/**\r\n * Get element by id\r\n * Elements that were already requested are registered in \"selectors\" array for performance\r\n */\r\nexport function select(id) {\r\n  let selector = window.selectors[id]\r\n  if (!selector) {\r\n    selector = document.getElementById(id)\r\n    window.selectors.id = selector\r\n  }\r\n  return selector\r\n}\r\n\r\n/**\r\n * Add or remove the class \"toggleClass\" on all given selectors\r\n */\r\nexport function toggleClass(selectors, toggleClass, isAdd) {\r\n  selectors.forEach((id) => {\r\n    if (isAdd) {\r\n      select(id).classList.add(toggleClass)\r\n    } else {\r\n      select(id).classList.remove(toggleClass)\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Return the part of the URL corresponding to location hash according to current values,\r\n * designed to work only when called on books page\r\n */\r\nexport function getURL() {\r\n  return `#${window.baseURL}?${window.sortingParam}`\r\n}","import styleUrl from \"url:../styles/style.css\";\r\nimport { updateAnswer } from './utils/what-to-read';\r\n\r\nclass AdrQuestion extends HTMLElement {\r\n\r\n  static get observedAttributes() {\r\n    return ['question']\r\n  }\r\n\r\n  attributeChangedCallback(_, oldValue, newValue) {\r\n    // Remove the listeners of the old question\r\n    if (oldValue !== null) {\r\n      this.removeQuestionListeners()\r\n    }\r\n    // Get the new question structure from the stringified attribute\r\n    let question = JSON.parse(newValue)\r\n    // Show the new question in the DOM\r\n    this.showQuestion(question)\r\n    // Add the listeners of the new question\r\n    this.addQuestionListeners()\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.removeQuestionListeners()\r\n  }\r\n\r\n  constructor() {\r\n    super()\r\n    this.wrapper = document.createElement('div')\r\n    var shadow = this.attachShadow({mode: 'closed'})\r\n    shadow.innerHTML = `\r\n      <link rel=\"stylesheet\" href=\"https://unpkg.com/purecss@1.0.0/build/pure-min.css\">\r\n      <link rel=\"stylesheet\" type=\"text/css\" href=\"${styleUrl}\">\r\n    `\r\n    shadow.appendChild(this.wrapper)\r\n  }\r\n\r\n  addQuestionListeners() {\r\n    let answersElements = this.wrapper.querySelectorAll('[name]')\r\n    answersElements.forEach((element) => {\r\n      element.addEventListener('change', this.selectAnswer)\r\n    })\r\n  }\r\n\r\n  removeQuestionListeners() {\r\n    let answersElements = this.wrapper.querySelectorAll('[name]')\r\n    answersElements.forEach((element) => {\r\n      element.removeEventListener('change', this.selectAnswer)\r\n    })\r\n  }\r\n\r\n  selectAnswer(event) {\r\n    updateAnswer(event.target.value)\r\n  }\r\n\r\n  showQuestion(question) {\r\n    let answers = ''\r\n    let first = true\r\n    let checked = ' checked'\r\n    question.choices.forEach((choice) => {\r\n      answers += `\r\n        <div>\r\n          <input type=\"radio\" id=\"${choice.id}\" name=\"question\" value=\"${choice.id}\"${checked}>\r\n          <label for=\"${choice.id}\">${choice.label}</label>\r\n        </div>\r\n      `\r\n      if (first) {\r\n        first = false\r\n        checked = ''\r\n      }\r\n    })\r\n    this.wrapper.innerHTML = `\r\n      <p>${question.label}</p>\r\n      ${answers}\r\n    `\r\n  }\r\n}\r\n\r\ncustomElements.define('adr-question', AdrQuestion)\r\n\r\n"],"names":["$51bfbc0a03b8d2d7$exports","parcelRequire","getBundleURL","$3945e8805952e25f$var$questions","id","label","choices","score","suzuha","ede","vdy","$3945e8805952e25f$export$ac24b86c55400252","window","questions","sort","Math","random","$4g06v","select","setAttribute","length","$3945e8805952e25f$var$_showQuestion","addEventListener","$3945e8805952e25f$var$_nextQuestion","$3945e8805952e25f$export$345e9644ae40cb40","value","selectedAnswer","$3945e8805952e25f$var$_computeTmpScore","questionIndex","undefined","$3945e8805952e25f$var$_getQuestion","find","param","_step","_iterator","Object","entries","tmpScore","Symbol","iterator","_iteratorNormalCompletion","next","done","_didIteratorError","_iteratorError","JSON","stringify","assign","$97DEC","objectSpread","innerHTML","$3198bcad598fab10$export$19be2ca186eec00f","selector","selectors","document","getElementById","$3198bcad598fab10$export$bd6a58afea01c4ec","toggleClass","isAdd","forEach","classList","add","remove","$3198bcad598fab10$export$20f141dc78dea879","concat","baseURL","sortingParam","$66d9bcd890419947$var$AdrQuestion","HTMLElement1","call","this","wrapper","createElement","shadow","_this","attachShadow","mode","$parcel$interopDefault","appendChild","key","_","oldValue","newValue","removeQuestionListeners","question","parse","showQuestion","addQuestionListeners","querySelectorAll","element","selectAnswer","removeEventListener","event","$4URwl","updateAnswer","target","answers","first","checked","choice","HTMLElement","customElements","define"],"version":3,"file":"index.80b7bda5.js.map"}