{"mappings":"iiBAAAA,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,8b,mBCAzDC,EAAiBJ,EAAA,SAAAK,aAA6C,SAAWL,EAAA,SAAAM,QAA6C,SCEtH,IAIMC,EAAN,SAAQC,G,wBAAFD,EAAaC,G,oBAAbD,G,SAAAA,I,4BAAAA,I,gBAqDGE,QAAUC,SAASC,cAAc,O,EACjCF,QAAQG,UAAUC,IAAI,e,EAEtBC,YAAc,CACjB,CACEC,GAAI,SACJC,YAAa,SACbC,QAAOC,EAAOC,eAAe,cAE/B,CACEJ,GAAI,MACJC,YAAa,uBACbC,QAAOC,EAAOC,eAAe,4BAE/B,CACEJ,GAAI,MACJC,YAAa,kBACbC,QAAOC,EAAOC,eAAe,wB,EAI5BL,YAAYM,SAAQ,SAACC,G,EACnBZ,QAAQa,YAAYD,EAASJ,QACpC,IAEA,IAAIM,EAAML,EAAQM,aAAa,CAACC,KAAM,W,OACtCF,EAAOG,UAAa,iJAEsCC,OAATC,EAAAxB,GAAS,YAE1DmB,EAAOD,YAAWJ,EAAMT,S,uBAnFtBF,EAAa,C,CAMjBsB,IAAA,2B,MAAA,SAAyBC,EAAGC,EAAIC,G,WAC1BC,EAAQ/B,KAAKC,MAAM6B,GACnBE,EAAU,GAETC,GAAgB,EAAhBC,GAAgB,EAAhBC,OAAgBC,E,IAArB,IAAG,IAAEC,EAAAC,EAAoBC,OAAOC,QAAQT,GAAKU,OAAAC,cAAxCT,GAAAI,EAAAC,EAAgBK,QAAAC,MAAhBX,GAAgB,GAAhB,IAAGY,EAAAC,EAAAC,cAAHV,EAAgBW,MAAA,GAAXrB,EAAGkB,EAAA,GAAEG,EAAKH,EAAA,GAClBb,EAAQiB,KAAK,CACXpC,GAAIc,EACJqB,S,WAHCd,GAAgB,EAAhBC,EAAgBe,C,aAAhBjB,GAAgB,MAAhBK,EAAgBa,QAAhBb,EAAgBa,Q,YAAhBjB,E,MAAAC,C,EAOLH,EAAUA,EAAQoB,MAAK,SAACC,EAAGC,GAAM,OAAAA,EAAEN,MAAQK,EAAEL,K,IAG7CO,KAAK3C,YAAYM,SAAQ,SAACC,GACxB,IAAIqC,EAAOxC,EAAQyC,aAAazB,EAASb,EAASN,IAC9C6C,EA1BQ,MA2BZ,OAAOF,EAAQG,UACb,KAAK,EACHD,EA5BQ,OA6BR,MACF,KAAK,EACHA,EA9BQ,QAiCZvC,EAASJ,QAAQ6C,MAAM,cAAgBF,EACvCvC,EAASJ,QAAQS,UAAa,GAAmBC,OAAjB+B,EAAQK,KAAK,MAAyBpC,OAArBN,EAASL,YAC5D,GAEF,G,CAEAa,IAAA,e,MAAA,SAAaK,EAAS8B,GAEpB,IAAIC,EAAa/B,EAAQgC,MAAK,SAAQC,GAAI,OAAPA,EAAFpD,KAAgBiD,C,IAE7CI,EAAiBlC,EAAQgC,MAAK,SAAQC,G,IAALjB,EAAKiB,EAALjB,MAAY,OAAAe,EAAWf,QAAUA,C,IAEtE,MAAO,CAELa,KAAM7B,EAAQmC,QAAQD,GAAkB,EAExCP,SAAU3B,EAAQmC,QAAQJ,GAAc,EAE5C,G,CAqCApC,IAAA,iB,MAAA,SAAeH,GACb,IAAIL,EAAWX,SAASC,cAAc,KAGtC,OAFAU,EAAST,UAAUC,IAAI,eACvBQ,EAASK,UAAYA,EACdL,CACT,I,EAzFWQ,IAAA,qB,IAAX,WACE,MAAO,CAAC,QACV,KAJItB,C,CAAN,C,kBAA4BC,cA8F5B8D,eAAeC,OAAO,kBAAmBhE,E","sources":["node_modules/@parcel/runtime-js/lib/runtime-0172e0bf8343171a.js","node_modules/@parcel/runtime-js/lib/runtime-84220839299ca78a.js","js/adr-result-list.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"iJniZ\\\":\\\"index.600ecc51.js\\\",\\\"gbcXk\\\":\\\"style.fa563be8.css\\\",\\\"hwmB9\\\":\\\"background.761bc37b.jpg\\\",\\\"cx3w5\\\":\\\"artwork-suzuha.583b2d51.jpg\\\",\\\"aroW2\\\":\\\"artwork-ede.54057cad.png\\\",\\\"ilpGW\\\":\\\"cover-renaissance-s4-1024.6b8555ec.png\\\",\\\"6Vjqf\\\":\\\"artwork-statue-chateau-s4.d48a5537.png\\\",\\\"gR7QX\\\":\\\"artwork-lecture-s4.7439fb69.png\\\"}\"));","module.exports = require('./helpers/bundle-url').getBundleURL('iJniZ') + require('./helpers/bundle-manifest').resolve(\"gbcXk\");","import styleUrl from \"url:../styles/style.css\";\n\nconst position1 = '0px'\nconst position2 = '50px'\nconst position3 = '100px'\n\nclass AdrResultList extends HTMLElement {\n\n  static get observedAttributes() {\n    return ['score']\n  }\n\n  attributeChangedCallback(_, __, newValue) {\n    let score = JSON.parse(newValue)\n    let results = []\n    // We need to transform the score dictionary into an array...\n    for (let [key, value] of Object.entries(score)) {\n      results.push({\n        id: key,\n        value\n      })\n    }\n    // ...in order to sort this array by score\n    results = results.sort((a, b) => b.value - a.value)\n\n    // Then for each book, apply margin-top depending on its index in results\n    this.bookListing.forEach((bookItem) => {\n      let ranking = this.bookPosition(results, bookItem.id)\n      let marginValue = position1 \n      switch(ranking.position) {\n        case 2:\n          marginValue = position2\n          break;\n        case 3:\n          marginValue = position3\n          break\n      }\n      bookItem.element.style['margin-top'] = marginValue\n      bookItem.element.innerHTML = `${ranking.rank}. ${bookItem.initialHTML}`\n    })\n    \n  }\n\n  bookPosition(results, bookId) {\n    // Find the first (and only) element corresponding to the bookId in the results array\n    let resultItem = results.find(({ id }) => id === bookId)\n    // Find the first element with the same score as the found book\n    let firstScoreItem = results.find(({ value }) => resultItem.value === value)\n    // Then return the index of this element + 1 to get its position\n    return {\n      // The rank is the actual rank related to the score\n      rank: results.indexOf(firstScoreItem) + 1,\n      // The position id for the display order of the boxes\n      position: results.indexOf(resultItem) + 1\n    }\n  }\n\n  constructor() {\n    super()\n    this.wrapper = document.createElement('div')\n    this.wrapper.classList.add('result-list')\n\n    this.bookListing = [\n      { \n        id: 'suzuha', \n        initialHTML: 'Suzuha',\n        element: this.createBookItem('1. Suzuha')\n      },\n      { \n        id: 'ede', \n        initialHTML: 'L\\'Enfant des Esprits',\n        element: this.createBookItem('2. L\\'Enfant des Esprits') \n      },\n      { \n        id: 'vdy',\n        initialHTML: 'Le Voeu de Yoko',\n        element: this.createBookItem('3. Le Voeu de Yoko')\n      }\n    ]\n\n    this.bookListing.forEach((bookItem) => {\n      this.wrapper.appendChild(bookItem.element)\n    })\n\n    var shadow = this.attachShadow({mode: 'closed'})\n    shadow.innerHTML = `\n      <link rel=\"stylesheet\" href=\"https://unpkg.com/purecss@1.0.0/build/pure-min.css\">\n      <link rel=\"stylesheet\" type=\"text/css\" href=\"${styleUrl}\">\n    `\n    shadow.appendChild(this.wrapper)\n  }\n\n  createBookItem(innerHTML) {\n    let bookItem = document.createElement('p')\n    bookItem.classList.add('result-item')\n    bookItem.innerHTML = innerHTML\n    return bookItem\n  }\n}\n\ncustomElements.define('adr-result-list', AdrResultList)"],"names":["parcelRequire","register","JSON","parse","$d3008ccb07690dec$exports","getBundleURL","resolve","$5935a48fd095e196$var$AdrResultList","HTMLElement","wrapper","document","createElement","classList","add","bookListing","id","initialHTML","element","_this","createBookItem","forEach","bookItem","appendChild","shadow","attachShadow","mode","innerHTML","concat","$parcel$interopDefault","key","_","__","newValue","score","results","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Object","entries","Symbol","iterator","next","done","_value","$kAkBg","slicedToArray","value","push","err","return","sort","a","b","this","ranking","bookPosition","marginValue","position","style","rank","bookId","resultItem","find","param","firstScoreItem","indexOf","customElements","define"],"version":3,"file":"index.600ecc51.js.map"}